ARG ARCH=amd64

# The node version here should match the version of the runtime image which is
# specified in the base-image subdirectory in the project
FROM resin/rpi-node:6.5-slim as rpi-node-base
FROM resin/armv7hf-node:6.5-slim as armv7hf-node-base
FROM resin/armel-node:6.5-slim as armel-node-base
FROM resin/aarch64-node:6.5-slim as aarch64-node-base

FROM resin/amd64-node:6.5-slim as amd64-node-base
RUN echo '#!/bin/sh\nexit 0' > /usr/bin/cross-build-start && chmod +x /usr/bin/cross-build-start \
	&& echo '#!/bin/sh\nexit 0' > /usr/bin/cross-build-end && chmod +x /usr/bin/cross-build-end

FROM resin/i386-node:6.5-slim as i386-node-base
RUN echo '#!/bin/sh\nexit 0' > /usr/bin/cross-build-start && chmod +x /usr/bin/cross-build-start \
	&& echo '#!/bin/sh\nexit 0' > /usr/bin/cross-build-end && chmod +x /usr/bin/cross-build-end

FROM i386-node-base as i386-nlp-node-base

##############################################################################

# We always do the webpack build on amd64, cause it's way faster
FROM amd64-node-base as node-build

WORKDIR /usr/src/app

RUN apt-get update \
	&& apt-get install -y \
		g++ \
		git \
		libsqlite3-dev \
		make \
		python \
		rsync \
		wget \
	&& rm -rf /var/lib/apt/lists/

COPY package.json /usr/src/app/

# Install only the production modules
RUN JOBS=MAX npm install --production --no-optional --unsafe-perm \
	&& npm dedupe

COPY src /usr/src/app/src

# Install devDependencies, build the coffeescript and then prune the deps
RUN npm install --only=dev --no-optional --unsafe-perm \
	&& npm run lint \
	&& npm run build \
	&& npm prune --production \
	&& npm dedupe

# Minimal runtime image
FROM resin/$ARCH-supervisor:v4.2.4

COPY --from=node-build /usr/src/app/src ./src
